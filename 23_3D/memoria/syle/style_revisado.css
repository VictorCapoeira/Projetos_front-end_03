body{
    min-height: 100vh;
    margin: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: radial-gradient(#3f5efb, #aa46fb);
    font-family: "Roboto", sans-serif;
}
h1{
    font-weight: 100;
    text-align: center;
    font-size: 2.5rem;
}
main{
    background-color: white;
    width: 620px;
    padding: 2rem;
    box-sizing: border-box;
    box-shadow: 0 15px 20px -10px rgb(0 0 0 / .6);
}
.game{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 90px);
    gap: 1rem;
    perspective: 500px;
}
.card{
    position: relative;
    border: 2px solid red;
    border-radius: 6px;
    transform-style: preserve-3d;
    transition: transform .3s;
    box-shadow: 0 5px 7px -5px rgb(0 0 0 / .5); 
}
.card img{
    border-radius: 6px;
    max-width: 100%;
    height: 100%;
    width: 100%;
    position: absolute;
    overflow: hidden;
    object-fit: cover; 
    /* basicamente, usando o object-fit é quase como se estivessmoes usando o background-size para formartar as imgs. na pratica, ela faz com que a imagem cresça, mas sem se distocer  */
    backface-visibility: hidden
}
.card-front{
    transform: rotateY(180deg);
}
main:has(#check1:checked) .game .card1,
main:has(#check2:checked) .game .card2,
main:has(#check3:checked) .game .card3,
main:has(#check4:checked) .game .card4,
main:has(#check5:checked) .game .card5,
main:has(#check6:checked) .game .card6,
main:has(#check7:checked) .game .card7,
main:has(#check8:checked) .game .card8,
main:has(#check9:checked) .game .card9,
main:has(#check10:checked) .game .card10,
main:has(#check11:checked) .game .card11,
main:has(#check12:checked) .game .card12,
main:has(#check13:checked) .game .card13,
main:has(#check14:checked) .game .card14, /*selecioando usando a pesudo class has  */
main:has(#check15:checked) .game .card15,
main:has(#check16:checked) .game .card16 {
    transform: rotateY(180deg);
}
main:has(#check1:focus) .game .card1, /*habilitando o focus pelo teclado  */
main:has(#check2:focus) .game .card2,
main:has(#check3:focus) .game .card3,
main:has(#check4:focus) .game .card4,
main:has(#check5:focus) .game .card5,
main:has(#check6:focus) .game .card6,
main:has(#check7:focus) .game .card7,
main:has(#check8:focus) .game .card8,
main:has(#check9:focus) .game .card9,
main:has(#check10:focus-visible) .game .card10, /*só habilitando o focus pelo teclado e não pelo clique do mouse  */
main:has(#check11:focus-visible) .game .card11,
main:has(#check12:focus-visible) .game .card12,
main:has(#check13:focus-visible) .game .card13,
main:has(#check14:focus-visible) .game .card14,
main:has(#check15:focus-visible) .game .card15,
main:has(#check16:focus-visible) .game .card16 {
    outline: 2px solid red;
    outline-offset: 1px;
}
.controls{
    /* display: none; mata a acessebilidade */
    position: absolute;
    clip: 1px, 1px , 1px , 1px;
    width: 1px;
    height: 1px;
    overflow: hidden;
    margin: 0;
    padding: 0;
}